return {
  --  'neovim/nvim-lspconfig',
  --  dependencies = {
  --    { 'williamboman/mason.nvim', config = true },
  --    'williamboman/mason-lspconfig.nvim',
  --    'hrsh7th/cmp-nvim-lsp', -- for dot-completion support
  --  },
  --  config = function()
  --    -- Key mappings for LSP
  --    vim.api.nvim_create_autocmd('LspAttach', {
  --      group = vim.api.nvim_create_augroup('custom-lsp-attach', { clear = true }),
  --      callback = function(event)
  --        local map = function(keys, func, desc)
  --          vim.keymap.set('n', keys, func, { buffer = event.buf, desc = 'LSP: ' .. desc })
  --        end
  --
  --        map('gd', vim.lsp.buf.definition, '[G]oto [D]efinition')
  --        map('gD', vim.lsp.buf.declaration, '[G]oto [D]eclaration')
  --        map('gr', vim.lsp.buf.references, '[G]oto [R]eferences')
  --        map('gi', vim.lsp.buf.implementation, '[G]oto [I]mplementation')
  --        map('K', vim.lsp.buf.hover, 'Hover Documentation')
  --      end,
  --    })
  --
  --    -- Capabilities for nvim-cmp (dot completion etc.)
  --    local capabilities = vim.lsp.protocol.make_client_capabilities()
  --    capabilities = require('cmp_nvim_lsp').default_capabilities(capabilities)
  --
  --    -- C/C++ support with dot completion and clang-tidy
  --    local servers = {
  --      clangd = {
  --        cmd = {
  --          'clangd',
  --          '--background-index',
  --          '--clang-tidy',
  --          '--header-insertion=iwyu',
  --          '--completion-style=detailed',
  --          '--function-arg-placeholders',
  --          '--fallback-style=llvm',
  --        },
  --        capabilities = capabilities,
  --      },
  --      lua_ls = {
  --        capabilities = capabilities,
  --      },
  --      pyright = {
  --        capabilities = capabilities,
  --      },
  --      rust_analyzer = {
  --        capabilities = capabilities,
  --      },
  --    }
  --
  --    -- Set up mason
  --    require('mason').setup()
  --    require('mason-lspconfig').setup {
  --      ensure_installed = vim.tbl_keys(servers),
  --      handlers = {
  --        function(server_name)
  --          local opts = servers[server_name] or {}
  --          require('lspconfig')[server_name].setup(opts)
  --        end,
  --      },
  --    }
  --  end,
}
